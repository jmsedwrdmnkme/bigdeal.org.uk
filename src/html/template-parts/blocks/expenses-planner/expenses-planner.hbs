<?php
/**
* Expenses planner block
*
* @package      Synthetic
* @author       James Monk
* @since        1.0.0
* @license      GPL-2.0+
**/

// disable block frontend wrapper.
add_filter( 'acf/hero/frontend_allow_wrapper', '__return_false' );
?>
<div class="wp-block-group is-layout-constrained">
  <div class="wp-block-group__inner-container overflow-hidden">
    <div class="budget-planner py-5 mx-n3">
      <div class="container">
        <h2 data-html2canvas-ignore="true">Calculator</h2>
        <div class="budget-planner__row border border-white border-5 shadow-lg rounded-4">
          <div class="row mx-2 mb-3 mb-md-4 mx-md-3">

            <div class="col-lg-6 table-container table__income">
              <div class="mx-md-3">
                <h3 class="header header__income">Income</h3>
                <div class="table-parent shadow-lg">
                  <table class="table">
                    <thead>
                      <tr>
                        <th scope="col">Source</th>
                        <th scope="col">Income</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <th scope="row">
                          <input type="text" class="form-control" placeholder="Source">
                        </th>
                        <td>
                          <input type="number" class="form-control input__income" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                        </td>
                      </tr>
                      <tr>
                        <th scope="row">
                          <input type="text" class="form-control" placeholder="Source">
                        </th>
                        <td>
                          <input type="number" class="form-control input__income" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                        </td>
                      </tr>
                      <tr>
                        <th scope="row">
                          <input type="text" class="form-control" placeholder="Source">
                        </th>
                        <td>
                          <input type="number" class="form-control input__income" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                        </td>
                      </tr>
                    </tbody>
                  </table>
                  <div class="btn-container table__income--btn mx-2 px-1 mt-n2">
                    <button type="button" data-html2canvas-ignore="true" class="btn btn-sm btn-orange text-white btn--add">Add income</button>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-lg-6 table-container table__saving">
              <div class="mx-md-3">
                <h3 class="header header__saving">Saving goals</h3>
                <div class="table-parent shadow-lg">
                  <table class="table">
                    <thead>
                      <tr>
                        <th scope="col">Saving Goal</th>
                        <th scope="col">Amount</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <th scope="row">
                          <input type="text" class="form-control" placeholder="Goal">
                        </th>
                        <td>
                          <input type="number" class="form-control input__saving" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                        </td>
                      </tr>
                      <tr>
                        <th scope="row">
                          <input type="text" class="form-control" placeholder="Goal">
                        </th>
                        <td>
                          <input type="number" class="form-control input__saving" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                        </td>
                      </tr>
                    </tbody>
                  </table>
                  <div class="btn-container table__saving--btn mx-2 px-1 mt-n2">
                    <button type="button" data-html2canvas-ignore="true" class="btn btn-sm btn-orange text-white btn--add">Add goal</button>
                  </div>
                  <small class="table__saving--total d-flex mt-2 text-white position-relative py-2 ms-n2 mb-n1">
                    <div>Total</div>
                    <div class="span__saved">&pound;0</div>
                  </small>
                </div>
              </div>
            </div>

            <div class="col-lg-12 table-container table__fixed">
              <div class="mx-md-3">
                <h3 class="header header__expenses">Expenses</h3>
                <div class="table-parent shadow-lg">
                  <div class="overflow-x-scroll mb-4 mb-lg-0">
                    <table class="table">
                      <thead>
                        <tr>
                          <th scope="col">Expense</th>
                          <th scope="col">Type</th>
                          <th scope="col">Budget</th>
                          <th scope="col">Spent</th>
                          <th scope="col">Left over</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <th scope="row">
                            <input type="text" class="form-control" placeholder="Expense">
                          </th>
                          <td>
                            <select class="form-select" aria-label="Fixed/Variable" data-html2canvas-ignore="true">
                              <option value="Fixed">Fixed</option>
                              <option value="Variable">Variable</option>
                            </select>
                          </td>
                          <td>
                            <input type="number" class="form-control input__budget" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <input type="number" class="form-control input__spent" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <span class="form-control span__left">&pound;0</span>
                          </td>
                        </tr>
                        <tr>
                          <th scope="row">
                            <input type="text" class="form-control" placeholder="Expense">
                          </th>
                          <td>
                            <select class="form-select" aria-label="Fixed/Variable" data-html2canvas-ignore="true">
                              <option value="Fixed">Fixed</option>
                              <option value="Variable">Variable</option>
                            </select>
                          </td>
                          <td>
                            <input type="number" class="form-control input__budget" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <input type="number" class="form-control input__spent" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <span class="form-control span__left">&pound;0</span>
                          </td>
                        </tr>
                        <tr>
                          <th scope="row">
                            <input type="text" class="form-control" placeholder="Expense">
                          </th>
                          <td>
                            <select class="form-select" aria-label="Fixed/Variable" data-html2canvas-ignore="true">
                              <option value="Fixed">Fixed</option>
                              <option value="Variable">Variable</option>
                            </select>
                          </td>
                          <td>
                            <input type="number" class="form-control input__budget" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <input type="number" class="form-control input__spent" style="-webkit-appearance: none; -moz-appearance: textfield;" placeholder="£">
                          </td>
                          <td>
                            <span class="form-control span__left">&pound;0</span>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                  <div class="btn-container table__fixed--btn mx-2 px-1 mt-n2">
                    <button type="button" data-html2canvas-ignore="true" class="btn btn-sm btn-orange text-white btn--add">Add expense</button>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="results-container py-3 p-md-4 border-top border-white border-5">
            <div class="row mx-2 px-lg-2">
              <div class="col-6 col-lg-3 d-flex">
                <div class="rounded-3 result result__income p-2 p-lg-3 w-100">
                  <div>Total Income</div>
                  <span class="total__income ms-n2 ms-lg-n3 mt-3">&pound;0</span>
                </div>
              </div>

              <div class="col-6 col-lg-3 d-flex">
                <div class="rounded-3 result result__expenses p-2 p-lg-3 w-100">
                  <div>Total Expenses</div>
                  <span class="total__expenses ms-n2 ms-lg-n3 mt-3">&pound;0</span>
                </div>
              </div>

              <div class="col-lg-6 d-flex mt-3 mt-lg-0">
                <div class="rounded-3 result result__saved p-2 p-lg-3 w-100">
                  <div>Total Saved</div>
                  <span class="total__saved d-block my-2">&pound;0</span>
                  <small class="d-block">Left to reach savings goal: <span class="total__goal fw-bold">&pound;0</span></small>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="text-center mt-4 pt-3 position-relative" data-html2canvas-ignore="true">
          <div class="d-flex flex-wrap justify-content-center">
            <button type="button" class="col-auto btn btn-purple text-white btn--pdf">Save as PDF</button>
            <div class="col-12 col-md-auto ms-md-auto">
              <button type="button" class="btn btn-link btn--download d-block py-0 mx-auto mt-4 mt-md-0">Download as blank PDF</button>
              <button type="button" class="btn btn-link btn--clear d-block py-0 mx-auto me-md-0 mt-3 mt-md-0" disabled>Clear all data</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.0.0-rc.7/dist/html2canvas.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/jspdf-html2canvas@latest/dist/jspdf-html2canvas.min.js"></script>
  <script>
    // Formatting currency
    let pounds = Intl.NumberFormat('en-GB', {
      style: 'currency',
      currency: 'GBP',
      maximumFractionDigits: 0,
    });

    // Calc
    const planner = document.querySelector('.budget-planner');
    const capture = planner.querySelector('.container');
    const tables = document.querySelectorAll('.table-container');

    let totalIncome = document.querySelector('.total__income'),
      totalExpenses = document.querySelector('.total__expenses'),
      spanSaved = document.querySelector('.span__saved'),
      totalSaved = document.querySelector('.total__saved'),
      totalGoal = document.querySelector('.total__goal');

    /*
     * HTML to PDF output
     */

    const btnDownload = document.querySelector('.btn--pdf');

    btnDownload.addEventListener('click', () => {
      downloadSheet();
    });

    function downloadSheet() {
      let shadows = capture.querySelectorAll('.shadow-lg');
      shadows.forEach((shadow) => {
        shadow.classList.remove('shadow-lg');
      });

      let textInputs = capture.querySelectorAll('[type="text"]');
      textInputs.forEach((input) => {
        let placeholder = input.getAttribute('placeholder');
        input.setAttribute('data-placeholder', placeholder);
        input.setAttribute('placeholder', '');
      });

      let selects = capture.querySelectorAll('select');
      selects.forEach((select) => {
        let selectInput = document.createElement('input');
        selectInput.classList.add('form-control');
        select.parentNode.insertBefore(selectInput, select.nextSibling);
      });

      capture.style.minWidth = '1024px';

      planner.classList.remove('py-5');

      html2PDF(capture, {
        jsPDF: {
          format: 'a4',
        },
        imageType: 'image/png',
        output: 'big-deal-budget.pdf',
        html2canvas: {
          scrollX: 0,
          scrollY: -window.scrollY,
        },
      });

      capture.style.minWidth = 'inherit';

      planner.classList.add('py-5');

      shadows.forEach((shadow) => {
        shadow.classList.add('shadow-lg');
      });

      selects.forEach((select) => {
        let selectParent = select.parentNode;
        let selectInput = selectParent.querySelector('input');
        selectInput.remove();
      });

      textInputs.forEach((input) => {
        let placeholder = input.getAttribute('placeholder');
        let dataPlaceholder = input.getAttribute('data-placeholder');
        input.setAttribute(placeholder, data-placeholder);
        input.setAttribute('data-placeholder', '');
      });
    }

    /*
     * Clear button
     */

    let btnClear = document.querySelector('.btn--clear');

    btnClear.addEventListener('click', () => {
      clearData();
    });

    function clearData() {
      tables.forEach((table) => {
        let inputs = table.querySelectorAll('input');
        let spanLeft = table.querySelectorAll('.span__left');
        let spanValue = table.querySelectorAll('[type="number"] + span');

        inputs.forEach((input) => {
          input.value = '';
          totalIncome.innerHTML = pounds.format('0');
          totalExpenses.innerHTML = pounds.format('0');
          totalSaved.innerHTML = pounds.format('0');
          totalGoal.innerHTML = pounds.format('0');

          if (spanLeft) {
            spanLeft.forEach((span) => {
              span.innerHTML = pounds.format('0');
            });
          }

          if (spanValue) {
            spanValue.forEach((span) => {
              span.classList.add('d-none');
            });
          }
        });

        btnClear.disabled = true;
      });
    }

    /*
     * Blank button
     */

    let btnBlank = document.querySelector('.btn--download');

    btnBlank.addEventListener('click', () => {
      clearData();
      downloadSheet();
    });


    /*
     * Budget functionality
     */

    tables.forEach((table) => {
      const btnContainer = table.querySelector('.btn-container'),
        btnAdd = table.querySelector('.btn--add');

      // Create span faux input values
      let inputs = table.querySelectorAll('input[type="number"]');
      inputs.forEach((input) => {
        'change input focus blur'.split(' ').map(name => input.addEventListener(name, calculation, false));

        let spanValue = document.createElement('span');
        spanValue.classList.add('d-none');
        input.parentNode.insertBefore(spanValue, input.nextSibling);
      });

      getInputs();

      // Remove button creation
      let btnRemove = document.createElement('button');
      btnRemove.type = 'button';
      btnRemove.classList.add('btn', 'btn-sm', 'btn-red', 'btn--remove', 'text-white');
      btnRemove.setAttribute('data-html2canvas-ignore', 'true');
      btnRemove.innerHTML = 'Remove row';

      // Add button functionality
      btnAdd.addEventListener('click', () => {
        let tableRows = [...table.querySelectorAll('tr')];

        if (tableRows.length < 10) {
          let tableRowLast = tableRows.pop(),
            tableRowClone = tableRowLast.cloneNode(true),
            tableRowCloneInputs = tableRowClone.querySelectorAll('input'),
            tableRowSpan = tableRowClone.querySelector('span');

          tableRowCloneInputs.forEach((input) => {
            input.value = ''; 
          });

          if (tableRowSpan) {
            tableRowSpan.innerHTML = pounds.format('0');
          }

          tableRowLast.insertAdjacentElement('afterend', tableRowClone);
          btnContainer.insertAdjacentElement('beforeend', btnRemove);
          btnRemove.style.display = '';

          if (tableRows.length === 8) {
            btnAdd.style.display = 'none';
          }
        } else {
          btnAdd.style.display = 'none';
        }

        getInputs();
        calculation();
      });

      // Remove button functionality
      btnRemove.addEventListener('click', () => {
        let tableRows = [...table.querySelectorAll('tr')];

        if (tableRows.length > 4) {
          let tableRowLast = tableRows.pop();

          tableRowLast.remove();
          btnAdd.style.display = '';

          if (tableRows.length === 4) {
            btnRemove.style.display = 'none';
          }
        } else {
          btnRemove.style.display = 'none';
        }

        getInputs();
        calculation();
      });

      function getInputs(event) {
        let inputs = table.querySelectorAll('input[type="number"]');

        // Recalculate on input interaction
        inputs.forEach((input) => {
          'change input focus blur'.split(' ').map(name => input.addEventListener(name, calculation, false));

          let inputParent = input.parentNode;
          let spanValue = inputParent.querySelector('span');

          input.addEventListener('focus', () => {
            input.value = '';
            spanValue.classList.add('d-none');
          });

          input.addEventListener('change', () => {
            spanValue.classList.remove('d-none');
            let inputValue = pounds.format(input.value);
            spanValue.innerHTML = inputValue;
          });
        });
      }

      function calculation(event) {
        let rows = table.querySelectorAll('tbody tr');

        rows.forEach((row) => {
          let inputBudget = row.querySelector('.input__budget'),
            inputSpent = row.querySelector('.input__spent'),
            inputIncome = row.querySelector('.input__income'),
            selectType = row.querySelector('select'),
            inputSaving = row.querySelector('.input__saving'),
            spanLeft = row.querySelector('.span__left');

          if (selectType) {
            selectType.addEventListener('change', () => {
              console.log(selectType.value);
              inputSpent.value = inputBudget.value;
            });
          }

          if (inputBudget) {
            spanLeft.innerHTML = pounds.format(Math.round(inputBudget.value - inputSpent.value));
          }
        });

        let arrayBudget = [],
          arraySpent = [],
          arrayIncome = [],
          arraySaving = [],
          allBudget = [...document.querySelectorAll('.input__budget')],
          allSpent = [...document.querySelectorAll('.input__spent')],
          allIncome = [...document.querySelectorAll('.input__income')],
          allSaving = [...document.querySelectorAll('.input__saving')];

        allBudget.forEach((input) => {
          let value = parseInt(input.value, 10);

          if (value) {
            arrayBudget.push(value);
          }
        });

        allSpent.forEach((input) => {
          let value = parseInt(input.value, 10);

          if (value) {
            arraySpent.push(value);
          }
        });

        allIncome.forEach((input) => {
          let value = parseInt(input.value, 10);

          if (value) {
            arrayIncome.push(value);
          }
        });

        allSaving.forEach((input) => {
          let value = parseInt(input.value, 10);

          if (value) {
            arraySaving.push(value);
          }
        });

        let grandBudget = arrayBudget.reduce((a, b) => a + b, 0),
          grandSpent = arraySpent.reduce((a, b) => a + b, 0),
          grandIncome = arrayIncome.reduce((a, b) => a + b, 0),
          grandSaving = arraySaving.reduce((a, b) => a + b, 0),
          grandSaved = Math.round(grandIncome - grandSpent);

        totalIncome.innerHTML = pounds.format(grandIncome);
        totalExpenses.innerHTML = pounds.format(grandSpent);
        totalSaved.innerHTML = pounds.format(grandSaved);
        spanSaved.innerHTML = pounds.format(grandSaving);

        if (grandSaving > grandSaved) {
          totalGoal.innerHTML = pounds.format(Math.round(grandSaving - grandSaved));
        } else {
          totalGoal.innerHTML = pounds.format('0');
        }

        btnClear.disabled = false;
      };
    });
  </script>
</div>
